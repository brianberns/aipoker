import pulp

kuhn_max = pulp.LpProblem("KuhnMax", pulp.LpMaximize)
kuhn_min = pulp.LpProblem("KuhnMin", pulp.LpMinimize)

A=[0,0,0,0,0,0,0,0,0,0,0,0,0;
    0,0,0,0,0,2,1,0,0,2,1,0,0;
    0,0,0,0,0,0,0,0,1,0,0,0,1;
    0,0,0,0,0,0,0,2,0,0,0,2,0;
    0,0,0,0,0,0,0,-1,0,0,0,-1,0;
    0,-2,1,0,0,0,0,0,0,2,1,0,0;
    0,0,0,0,-1,0,0,0,0,0,0,0,1;
    0,0,0,-2,0,0,0,0,0,0,0,2,0;
    0,0,0,-1,0,0,0,0,0,0,0,-1,0;
    0,-2,1,0,0,-2,1,0,0,0,0,0,0;
    0,0,0,0,-1,0,0,0,-1,0,0,0,0;
    0,0,0,-2,0,0,0,-2,0,0,0,0,0;
    0,0,0,-1,0,0,0,-1,0,0,0,0,0]/6.;
 
F=[1,0,0,0,0,0,0,0,0,0,0,0,0;
    -1,1,1,0,0,0,0,0,0,0,0,0,0;
    -1,0,0,1,1,0,0,0,0,0,0,0,0;
    -1,0,0,0,0,1,1,0,0,0,0,0,0;
    -1,0,0,0,0,0,0,1,1,0,0,0,0;
    -1,0,0,0,0,0,0,0,0,1,1,0,0;
    -1,0,0,0,0,0,0,0,0,0,0,1,1];
f=[1;0;0;0;0;0;0];
 
E=[1,0,0,0,0,0,0,0,0,0,0,0,0;
    -1,1,1,0,0,0,0,0,0,0,0,0,0;
    0,0,-1,1,1,0,0,0,0,0,0,0,0;
    -1,0,0,0,0,1,1,0,0,0,0,0,0;
    0,0,0,0,0,0,-1,1,1,0,0,0,0;
    -1,0,0,0,0,0,0,0,0,1,1,0,0;
    0,0,0,0,0,0,0,0,0,0,-1,1,1];
    
e=[1;0;0;0;0;0;0];

x = pulp.LpVariable('x', lowBound=0, cat='Continuous')
y = pulp.LpVariable('y', lowBound=0, cat='Continuous')

kuhn_max += 